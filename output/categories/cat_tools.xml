<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>chimez's blog (关于 tools 的文章)</title><link>https://chimez.github.io/</link><description></description><atom:link href="https://chimez.github.io/categories/cat_tools.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2025 &lt;a href="mailto:chimez@163.com"&gt;chimez&lt;/a&gt; </copyright><lastBuildDate>Wed, 18 Jun 2025 02:51:08 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>wsl</title><link>https://chimez.github.io/posts/wsl/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orgd67e950" class="outline-2"&gt;
&lt;h2 id="orgd67e950"&gt;WSL&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd67e950"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfb09315" class="outline-3"&gt;
&lt;h3 id="orgfb09315"&gt;配置 ssh&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfb09315"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;安装 &lt;code&gt;openssh-server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
编辑 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;
&lt;/p&gt;
&lt;pre class="example" id="org8c727b4"&gt;
# change port
Port 9922
ListenAddress 0.0.0.0
PasswordAuthentication yes
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;重启服务器 &lt;code&gt;sudo service ssh restart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
windows 重定向端口
&lt;/p&gt;
&lt;pre class="example" id="org73921cb"&gt;
netsh interface portproxy add v4tov4 listenaddress=0.0.0.0 listenport=9922 connectaddress=172.23.241.25 connectport=9922
&lt;/pre&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;端口号就是 ssh 的&lt;/li&gt;
&lt;li&gt;wsl 的 ip 地址可以从 &lt;code&gt;ifconfig&lt;/code&gt; 命令获得&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ifconfig&lt;/code&gt; 在 &lt;code&gt;net-tools&lt;/code&gt; 包中&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;在 windows 防火墙中添加端口&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>windows</category><category>wsl</category><guid>https://chimez.github.io/posts/wsl/</guid><pubDate>Thu, 21 Oct 2021 04:27:51 GMT</pubDate></item><item><title>setuptools</title><link>https://chimez.github.io/posts/setuptools/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org4d8e295" class="outline-2"&gt;
&lt;h2 id="org4d8e295"&gt;setuptools: python 的打包工具&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4d8e295"&gt;
&lt;p&gt;
&lt;a href="https://setuptools.pypa.io"&gt;setuptools&lt;/a&gt; 是 pypa 的项目。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1f981f3" class="outline-3"&gt;
&lt;h3 id="org1f981f3"&gt;基本使用&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1f981f3"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge245c5d" class="outline-4"&gt;
&lt;h4 id="orge245c5d"&gt;&lt;code&gt;pyproject.toml&lt;/code&gt;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge245c5d"&gt;
&lt;p&gt;
PEP 517 要求所有 python 项目需要一个配置文件 &lt;code&gt;pyproject.toml&lt;/code&gt; 其中描述项目的基本信息和依赖等。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    [build-system]
    requires = ["setuptools", "wheel"]
    build-backend = "setuptools.build_meta"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org70b108b" class="outline-4"&gt;
&lt;h4 id="org70b108b"&gt;&lt;code&gt;setup.cfg&lt;/code&gt; or &lt;code&gt;setup.py&lt;/code&gt;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org70b108b"&gt;
&lt;p&gt;
&lt;code&gt;setup.cfg&lt;/code&gt; 是 setuptools 的 DSL，而 &lt;code&gt;setup.py&lt;/code&gt; 用一般的 python 代码。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;setuptools&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;

    &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'mypackage'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'0.0.1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'mypackage'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'requests'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'importlib; python_version == "2.6"'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;packages&lt;/code&gt; 指定 setuptools 要处理的包，可以使用 &lt;code&gt;find_packages&lt;/code&gt;, &lt;code&gt;find_namespace_packages&lt;/code&gt; 来自动找到所有包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;install_requires&lt;/code&gt; 指定安装包需要的依赖, setuptools 可以自动从 pypa 安装依赖&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setup_requires&lt;/code&gt; 指定依赖，但 setuptools 不会自动安装它&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8c26278" class="outline-3"&gt;
&lt;h3 id="org8c26278"&gt;开发模式&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org8c26278"&gt;
&lt;p&gt;
使用开发模式，可以完成构建而不需要将文件复制到包目录。
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;开发模式安装 &lt;code&gt;setup.py develop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开发模式卸载 &lt;code&gt;setup.py develop --uninstall&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开发模式与 PEP 517 不兼容，所以用 pip 安装的方式是 &lt;code&gt;pip install --editable .&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfa07b16" class="outline-3"&gt;
&lt;h3 id="orgfa07b16"&gt;cython&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfa07b16"&gt;
&lt;p&gt;
setuptools 会自动检查 cython 是否安装，如果没有，就会忽略所有 &lt;code&gt;.pyx&lt;/code&gt; 文件。
&lt;/p&gt;

&lt;p&gt;
PEP 517 要求在 &lt;code&gt;pyproject.toml&lt;/code&gt; 中加入
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   [build-system]
   requires=[..., "cython"]
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
为了兼容性，推荐在 &lt;code&gt;setup.py&lt;/code&gt; 中也加入依赖 &lt;code&gt;setup_requires = ['cython', ...]&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;setup.py&lt;/code&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;setuptools&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;
   &lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;Cython.Build&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cythonize&lt;/span&gt;

   &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Hello world app'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;ext_modules&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cythonize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"hello.pyx"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
       &lt;span class="n"&gt;zip_safe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;setup_requires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'cython'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cython</category><category>python</category><guid>https://chimez.github.io/posts/setuptools/</guid><pubDate>Wed, 06 Oct 2021 12:00:12 GMT</pubDate></item><item><title>reStructuredText</title><link>https://chimez.github.io/posts/restructuredtext/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org11bdf88" class="outline-2"&gt;
&lt;h2 id="org11bdf88"&gt;reStructuredText&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org11bdf88"&gt;
&lt;p&gt;
reST, 文件后缀 &lt;code&gt;*.rst&lt;/code&gt; 是类似 markdown 的标记语言，是 python 的 &lt;img src="https://chimez.github.io/sphinx-documentation-generator.org" alt="Sphinx"&gt; 默认语言。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga0378aa" class="outline-3"&gt;
&lt;h3 id="orga0378aa"&gt;基本语法&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga0378aa"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc8fe67a" class="outline-4"&gt;
&lt;h4 id="orgc8fe67a"&gt;段落&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc8fe67a"&gt;
&lt;p&gt;
与 python 类似，reST 中用缩进表示不同的层级。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org66a81b2" class="outline-4"&gt;
&lt;h4 id="org66a81b2"&gt;行内标记&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org66a81b2"&gt;
&lt;pre class="example" id="org13ee42c"&gt;
*something*               | 斜体
**something**             | 粗体
``code``                  | 行内代码
`title &amp;lt;http://to.link&amp;gt;`_ | 外部链接
`my link`_                | 分开的链接
.. _my link: http::/a.link
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org092c4b1" class="outline-4"&gt;
&lt;h4 id="org092c4b1"&gt;列表&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org092c4b1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    1. 编号列表
    2. 编号列表

    * 无编号列表
    * 无编号列表

    #. 还是编号列表
    #. 还是编号列表


    * 列表可以嵌套

      * 但是要空一行
      * 并且缩进
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfb22fd2" class="outline-4"&gt;
&lt;h4 id="orgfb22fd2"&gt;引用块&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgfb22fd2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    引用块，末尾用双冒号::

      空一行

      并且缩进

    空一行就结束
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org42373ff" class="outline-4"&gt;
&lt;h4 id="org42373ff"&gt;表格&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org42373ff"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    完整的表格

    +------------------------+------------+----------+----------+
    | Header row, column 1   | Header 2   | Header 3 | Header 4 |
    | (header rows optional) |            |          |          |
    +========================+============+==========+==========+
    | body row 1, column 1   | column 2   | column 3 | column 4 |
    +------------------------+------------+----------+----------+
    | body row 2             | ...        | ...      |          |
    +------------------------+------------+----------+----------+

    简化的表格

    =====  =====  =======
    A      B      A and B
    =====  =====  =======
    False  False  False
    True   False  False
    False  True   False
    True   True   True
    =====  =====  =======
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org33890ad" class="outline-4"&gt;
&lt;h4 id="org33890ad"&gt;标题&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org33890ad"&gt;
&lt;pre class="example" id="org386054d"&gt;
# | parts
* | chapters
= | sections
- | subsections
^ | subsubsections
" | paragraphs
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge79771d" class="outline-3"&gt;
&lt;h3 id="orge79771d"&gt;指令&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge79771d"&gt;
&lt;p&gt;
reST 支持很多指令，这里是常用的几个
&lt;/p&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="orgfb9bf1c"&gt;&lt;/a&gt;&lt;code&gt;image&lt;/code&gt; 图片&lt;br&gt;&lt;/li&gt;

&lt;li&gt;&lt;a id="org84cf971"&gt;&lt;/a&gt;&lt;code&gt;[#footnote]_&lt;/code&gt; 脚注&lt;br&gt;&lt;/li&gt;

&lt;li&gt;&lt;a id="orgce6e4f6"&gt;&lt;/a&gt;&lt;code&gt;..&lt;/code&gt; 注释&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0497984" class="outline-3"&gt;
&lt;h3 id="org0497984"&gt;角色&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0497984"&gt;
&lt;p&gt;
reST 使用 &lt;code&gt;:rolename:`content`&lt;/code&gt; 语法来做一些复杂的行内标记
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5c83213" class="outline-4"&gt;
&lt;h4 id="org5c83213"&gt;&lt;code&gt;:ref:&lt;/code&gt; 交叉引用&lt;/h4&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge03f70f" class="outline-4"&gt;
&lt;h4 id="orge03f70f"&gt;&lt;code&gt;:math:&lt;/code&gt; 数学公式&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>doc</category><category>python</category><category>rst</category><guid>https://chimez.github.io/posts/restructuredtext/</guid><pubDate>Mon, 16 Aug 2021 02:46:27 GMT</pubDate></item><item><title>Sphinx: Documentation Generator</title><link>https://chimez.github.io/posts/sphinx-documentation-generator/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org20c29ee" class="outline-2"&gt;
&lt;h2 id="org20c29ee"&gt;Sphinx: 文档生成&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org20c29ee"&gt;
&lt;p&gt;
&lt;a href="https://www.sphinx-doc.org/en/master/usage/quickstart.html"&gt;sphinx/getting started&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org60856a7" class="outline-3"&gt;
&lt;h3 id="org60856a7"&gt;创建与配置项目&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org60856a7"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6942aeb" class="outline-4"&gt;
&lt;h4 id="org6942aeb"&gt;&lt;code&gt;sphinx-quickstart&lt;/code&gt;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org6942aeb"&gt;
&lt;p&gt;
使用这个命令，快速创建项目。跟随指导做一些选项。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1ab7b18" class="outline-4"&gt;
&lt;h4 id="org1ab7b18"&gt;生成文档&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1ab7b18"&gt;
&lt;p&gt;
使用命令 &lt;code&gt;sphinx-build -b html sourcedir builddir&lt;/code&gt; 或者 &lt;code&gt;make html&lt;/code&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6fe0371" class="outline-4"&gt;
&lt;h4 id="org6fe0371"&gt;基本配置&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org6fe0371"&gt;
&lt;p&gt;
基本配置在 &lt;code&gt;conf.py&lt;/code&gt; 文件中。这个文件就是一个python 脚本，可以执行各种python函数和导入其它库等。
&lt;/p&gt;

&lt;p&gt;
配置参考&lt;a href="https://www.sphinx-doc.org/en/master/usage/configuration.html"&gt;configuration&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org88f6ec1" class="outline-3"&gt;
&lt;h3 id="org88f6ec1"&gt;写文档&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org88f6ec1"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2da58f1" class="outline-4"&gt;
&lt;h4 id="org2da58f1"&gt;文档结构&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org2da58f1"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;index.rst&lt;/code&gt; 文件是文档的欢迎页面，其中包括
&lt;ol class="org-ol"&gt;
&lt;li&gt;目录树 &lt;code&gt;toctree&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org20f2575" class="outline-4"&gt;
&lt;h4 id="org20f2575"&gt;reStructuredText directives&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org20f2575"&gt;
&lt;p&gt;
rst 指令的格式中包括
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;参数：在指令名后面的冒号之后，每个指令可以有若干个参数&lt;/li&gt;
&lt;li&gt;选项：在参数之后，选项的形式是 &lt;code&gt;名-值&lt;/code&gt; 的列表，一行一个&lt;/li&gt;
&lt;li&gt;内容：在参数之后空一行&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org5de0dc1"&gt;&lt;/a&gt;&lt;code&gt;toctree&lt;/code&gt; 目录&lt;br&gt;
&lt;div class="outline-text-5" id="text-org5de0dc1"&gt;
&lt;p&gt;
参考：&lt;a href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#toctree-directive"&gt;directives/toctree-directive&lt;/a&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;     .. toctree::
        :maxdepth: 2

        intro
        strings
        datatypes
        numeric
        (many more documents listed here)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="orga3b978b"&gt;&lt;/a&gt;内容&lt;br&gt;
&lt;div class="outline-text-6" id="text-orga3b978b"&gt;
&lt;p&gt;
内容中每一行就是要链接到的文件名, 可以用 &lt;code&gt;Net Title &amp;lt;filename&amp;gt;&lt;/code&gt; 重新指定显示的标题
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id="org97a21ec"&gt;&lt;/a&gt;选项&lt;br&gt;
&lt;div class="outline-text-6" id="text-org97a21ec"&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;选项&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;:numbered:&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;给目录编号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;:caption: Table of Contents&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;目录的标题&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;:name: mastertoc&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;设置 &lt;code&gt;ref&lt;/code&gt; 用的名字&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;:titlesonly:&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;只显示文件标题&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;:glob:&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;可以使用 &lt;code&gt;*&lt;/code&gt; 匹配很多文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;:hidden:&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;链接，但不显示&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;:includehidden:&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;只链接一级标题，隐藏其它的&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;:maxdepth: 2&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;目录层级深度&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgeda25c5" class="outline-4"&gt;
&lt;h4 id="orgeda25c5"&gt;Domains&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgeda25c5"&gt;
&lt;p&gt;
为了对应 python/c++ 中的名字空间，防止函数名冲突，要把函数的文档写在 domain 里。
&lt;/p&gt;

&lt;p&gt;
参考 &lt;a href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html"&gt;domains&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org61c05f4"&gt;&lt;/a&gt;基本语法&lt;br&gt;
&lt;div class="outline-text-5" id="text-org61c05f4"&gt;
&lt;p&gt;
可以一次生成两个函数
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;     .. py:function:: spam(eggs)
                      ham(eggs)

        Spam or ham the foo.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
如果一个函数很长，可以折行并加上 &lt;code&gt;:noindex:&lt;/code&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;     .. py:function:: filterwarnings(action, message='', category=Warning, \
                                     module='', lineno=0, append=False)
        :noindex:
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
默认的 domain 是 python，可以用 &lt;code&gt;.. default-domain:: name&lt;/code&gt; 修改
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id="orgcf10bc4"&gt;&lt;/a&gt;交叉引用&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgcf10bc4"&gt;
&lt;p&gt;
基本语法是 &lt;code&gt;:role:`title &amp;lt;target&amp;gt;`&lt;/code&gt; 这会引用 &lt;code&gt;target&lt;/code&gt; 但显示的是 &lt;code&gt;title&lt;/code&gt;
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;前面加 &lt;code&gt;!&lt;/code&gt; 不生成引用&lt;/li&gt;
&lt;li&gt;前面加 波浪线 &lt;code&gt;\~&lt;/code&gt; 只会显示最后一个元素的引用 &lt;code&gt;:py:meth:`\~Queue.Queue.get`&lt;/code&gt; 只显示 &lt;code&gt;get&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id="org51497ba"&gt;&lt;/a&gt;C++&lt;br&gt;
&lt;div class="outline-text-5" id="text-org51497ba"&gt;
&lt;p&gt;
参考 &lt;a href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#cpp-domain"&gt;domains/cpp-domain&lt;/a&gt;     
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2e55f4c" class="outline-3"&gt;
&lt;h3 id="org2e55f4c"&gt;Autodoc: 注释文档&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org2e55f4c"&gt;
&lt;p&gt;
通过 autodoc 可以从源码的注释生成文档。需要在 &lt;code&gt;conf.py&lt;/code&gt; 的 &lt;code&gt;extensions&lt;/code&gt; 中加入 &lt;code&gt;'sphinx.ext.autodoc'&lt;/code&gt; . 之后就可以利用 &lt;code&gt;autofunction&lt;/code&gt; &lt;code&gt;automodule&lt;/code&gt; 等指令，将注释作为文档导入。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4d7a39d" class="outline-3"&gt;
&lt;h3 id="org4d7a39d"&gt;breathe&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4d7a39d"&gt;
&lt;p&gt;
&lt;a href="https://breathe.readthedocs.io/en/latest/index.html"&gt;breathe&lt;/a&gt; 是通过 doxygen 生成 c/c++ 的文档的工具
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3246110" class="outline-4"&gt;
&lt;h4 id="org3246110"&gt;基本使用&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3246110"&gt;
&lt;p&gt;
设置 &lt;code&gt;conf.py&lt;/code&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;breathe_projects_source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"my_proj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"../src"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"oneheader.h"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;breathe_default_project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"my_proj"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
就可以在 &lt;code&gt;index.rst&lt;/code&gt; 中使用
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    .. autodoxygenfile:: oneheader.h
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>Documents</category><category>python</category><guid>https://chimez.github.io/posts/sphinx-documentation-generator/</guid><pubDate>Mon, 16 Aug 2021 02:00:41 GMT</pubDate></item><item><title>gtags</title><link>https://chimez.github.io/posts/gtags/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org1beac84" class="outline-2"&gt;
&lt;h2 id="org1beac84"&gt;global(gtags) 代码标签&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1beac84"&gt;
&lt;p&gt;
&lt;a href="https://www.gnu.org/software/global/globaldoc_toc.html"&gt;global&lt;/a&gt; 是代码标签工具，用来辅助编辑器做补全。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd38e9a3" class="outline-3"&gt;
&lt;h3 id="orgd38e9a3"&gt;基本使用&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd38e9a3"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3bb39fa" class="outline-4"&gt;
&lt;h4 id="org3bb39fa"&gt;生成标签&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3bb39fa"&gt;
&lt;p&gt;
在项目的根目录下执行 &lt;code&gt;gtags&lt;/code&gt; 就会生成 &lt;code&gt;GPATH&lt;/code&gt;, &lt;code&gt;GRTAGS&lt;/code&gt;, &lt;code&gt;GTAGS&lt;/code&gt; 三个文件
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org98525b3" class="outline-4"&gt;
&lt;h4 id="org98525b3"&gt;命令行使用&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org98525b3"&gt;
&lt;p&gt;
命令行下可以用
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    # 查看定义位置
    $ global func1
    DIR1/fileB.c            # func1() is defined in fileB.c

    # 使用 less 查看定义
    less -t func1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>C</category><category>emacs</category><category>gtags</category><guid>https://chimez.github.io/posts/gtags/</guid><pubDate>Sat, 26 Jun 2021 14:43:48 GMT</pubDate></item><item><title>squid http proxy server</title><link>https://chimez.github.io/posts/squid-http-proxy-server/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org7d45a0f" class="outline-2"&gt;
&lt;h2 id="org7d45a0f"&gt;squid HTTP 代理服务器&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7d45a0f"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4d9b236" class="outline-3"&gt;
&lt;h3 id="org4d9b236"&gt;安装&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4d9b236"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   apt install squid
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga7caaad" class="outline-3"&gt;
&lt;h3 id="orga7caaad"&gt;配置&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga7caaad"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0d3e83c" class="outline-4"&gt;
&lt;h4 id="org0d3e83c"&gt;端口&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org0d3e83c"&gt;
&lt;p&gt;
&lt;code&gt;/etc/squid/squid.conf&lt;/code&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    http_port 3128
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1d78d64" class="outline-4"&gt;
&lt;h4 id="org1d78d64"&gt;访问权限&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1d78d64"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    http_access allow all
    # http_access deny all
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>proxy</category><category>squid</category><category>ssh</category><guid>https://chimez.github.io/posts/squid-http-proxy-server/</guid><pubDate>Fri, 21 May 2021 06:24:48 GMT</pubDate></item><item><title>Anki</title><link>https://chimez.github.io/posts/anki/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orgdf709c8" class="outline-2"&gt;
&lt;h2 id="orgdf709c8"&gt;Anki&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgdf709c8"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org06a3626" class="outline-3"&gt;
&lt;h3 id="org06a3626"&gt;插件&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org06a3626"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://ankiweb.net/shared/info/2055492159"&gt;AnkiConnect&lt;/a&gt; 基础设施&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ankiweb.net/shared/info/817108664"&gt;Anki Simulator&lt;/a&gt; 估计未来工作量&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ankiweb.net/shared/info/1436550454"&gt;AwesomeTTS&lt;/a&gt; 文本转语音&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ankiweb.net/shared/info/1087328706"&gt;Markdown and KaTeX Support&lt;/a&gt; 支持 markdown 的卡片类型&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>anki</category><guid>https://chimez.github.io/posts/anki/</guid><pubDate>Thu, 20 May 2021 07:05:06 GMT</pubDate></item><item><title>meson</title><link>https://chimez.github.io/posts/meson/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org58fee21" class="outline-2"&gt;
&lt;h2 id="org58fee21"&gt;meson 构建工具&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org58fee21"&gt;
&lt;p&gt;
网站 &lt;a href="https://mesonbuild.com"&gt;meson-build&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge7efd12" class="outline-3"&gt;
&lt;h3 id="orge7efd12"&gt;配置示例&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge7efd12"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;cc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;meson&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_compiler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;all_deps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
   &lt;span class="n"&gt;thread_dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dependency&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'threads'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;all_deps&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;thread_dep&lt;/span&gt;

   &lt;span class="n"&gt;src_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;include_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'../src'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;executable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'src1.c'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'src2.c'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
           &lt;span class="n"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all_deps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
           &lt;span class="n"&gt;include_directories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;src_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc685b08" class="outline-3"&gt;
&lt;h3 id="orgc685b08"&gt;使用 address sanitizer&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc685b08"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   CC=clang meson build  -Db_sanitize=address -Db_lundef=false
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org117b8c8" class="outline-3"&gt;
&lt;h3 id="org117b8c8"&gt;使用 clang 静态分析&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org117b8c8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   meson build
   ninja -C build scan-build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb0e8e3e" class="outline-3"&gt;
&lt;h3 id="orgb0e8e3e"&gt;自定义外部依赖&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb0e8e3e"&gt;
&lt;p&gt;
参考 &lt;a href="https://mesonbuild.com/Dependencies.html#declaring-your-own"&gt;Manual/Dependencies&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
一个外部依赖只需要知道头文件和链接库(静态/动态)
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;my_inc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;include_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;my_lib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;static_library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;my_dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;declare_dependency&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;link_with&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my_lib&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                               &lt;span class="n"&gt;include_directories&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my_inc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge17f7f4" class="outline-4"&gt;
&lt;h4 id="orge17f7f4"&gt;将依赖做子目录&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge17f7f4"&gt;
&lt;p&gt;
首先在子目录中放入依赖的源码，并且在其中定义子项目的 &lt;code&gt;meson.build&lt;/code&gt; 文件
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;foo_dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;declare_dependency&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
之后就可以在主项目中依赖它
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;foo_dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dependency&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fallback&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'foo_dep'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org03918b8" class="outline-3"&gt;
&lt;h3 id="org03918b8"&gt;子项目&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org03918b8"&gt;
&lt;p&gt;
&lt;a href="https://mesonbuild.com/Subprojects.html"&gt;https://mesonbuild.com/Subprojects.html&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org954b2a3" class="outline-4"&gt;
&lt;h4 id="org954b2a3"&gt;从子项目获取依赖&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org954b2a3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;libsimple_proj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subproject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'libsimple'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;libsimple_dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;libsimple_proj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_variable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'libsimple_dep'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1ccaf96" class="outline-3"&gt;
&lt;h3 id="org1ccaf96"&gt;使用 wrap 管理依赖&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1ccaf96"&gt;
&lt;p&gt;
在 &lt;code&gt;subprojects&lt;/code&gt; 文件夹中创建 &lt;code&gt;libfoobar.wrap&lt;/code&gt; 文件, 其中指定源码位置 &lt;code&gt;[wrap-file]&lt;/code&gt; 和提供的依赖 &lt;code&gt;[provide]&lt;/code&gt; ，格式参考 &lt;a href="https://mesonbuild.com/Wrap-dependency-system-manual.html"&gt;这里&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
对于非 meson-build 项目，还需要一个 &lt;code&gt;meson.build&lt;/code&gt; 文件来添加支持，这个额外的文件称作 &lt;code&gt;patch&lt;/code&gt;, 这个额外配置文件可以从网络中下载获取(通过 &lt;code&gt;patch_url&lt;/code&gt;, 参考&lt;a href="https://mesonbuild.com/Wrap-dependency-system-manual.html#accepted-configuration-properties-for-wraps"&gt;这里&lt;/a&gt;)
&lt;/p&gt;

&lt;p&gt;
示例 &lt;code&gt;subprojects/cache2.wrap&lt;/code&gt; ：
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
   &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Catch2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.13.3&lt;/span&gt;
   &lt;span class="n"&gt;source_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;catchorg&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Catch2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="mf"&gt;.13.3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;
   &lt;span class="n"&gt;source_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Catch2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.13.3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;
   &lt;span class="n"&gt;source_hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1804&lt;/span&gt;&lt;span class="n"&gt;feb72bc15c0856b4a43aa586c661af9c3685a75973b6a8fc0b950c7cfd13&lt;/span&gt;
   &lt;span class="n"&gt;patch_directory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catch2&lt;/span&gt;

   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;provide&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
   &lt;span class="n"&gt;catch2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catch2_dep&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
自己编写的配置文件应该放在 &lt;code&gt;subprojects/packagefiles/libfoobar/meson.build&lt;/code&gt; 中，并设置 &lt;code&gt;patch_directory&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
示例 &lt;code&gt;subprojects/packagefiles/cache2/meson.build&lt;/code&gt; ：
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'catch2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="s1"&gt;'cpp'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'2.13.3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;license&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Boost'&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;catch2_dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;declare_dependency&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="n"&gt;include_directories&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;include_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'single_include'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>C</category><category>meson</category><guid>https://chimez.github.io/posts/meson/</guid><pubDate>Mon, 10 May 2021 08:20:05 GMT</pubDate></item><item><title>dvc: Data Version Control</title><link>https://chimez.github.io/posts/dvc-data-version-control/</link><dc:creator>chimez</dc:creator><description>&lt;p&gt;
&lt;a href="https://dvc.org"&gt;dvc&lt;/a&gt; 是一个增强 git 管理大二进制文件能力的工具。
&lt;/p&gt;
&lt;div id="outline-container-orge8e915f" class="outline-2"&gt;
&lt;h2 id="orge8e915f"&gt;基本使用&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge8e915f"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgab22253" class="outline-3"&gt;
&lt;h3 id="orgab22253"&gt;初始化 dvc&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgab22253"&gt;
&lt;p&gt;
在一个 git 项目目录中运行
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   dvc init
   git commit -m "Initialize DVC"
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
就自动创建好了 dvc 需要东西。
&lt;/p&gt;

&lt;p&gt;
dvc 是寄生在git中的，其本身不提供版本管理能力，完全依靠 git 。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd0689fd" class="outline-3"&gt;
&lt;h3 id="orgd0689fd"&gt;添加数据&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd0689fd"&gt;
&lt;p&gt;
如果有一个大的数据文件 &lt;code&gt;data/data.h5&lt;/code&gt; ，那么就首先将它添加给 dvc， 然后把dvc创建的记录 &lt;code&gt;*.dvc&lt;/code&gt; 和自动生成的 &lt;code&gt;.gitignore&lt;/code&gt; 一起加到 git 中，之后再用 dvc 上传数据即可
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   dvc add data/data.h5
   git add data/data.h5.dvc data/.gitignore
   git commit -m "Add raw data"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4c59870" class="outline-3"&gt;
&lt;h3 id="org4c59870"&gt;dvc的远程库&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4c59870"&gt;
&lt;p&gt;
dvc 支持多种远程库，甚至是本地的远程库
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   mkdir -p /tmp/dvcstore
   dvc remote add -d myremote /tmp/dvcstore
   git commit .dvc/config -m "Configure local remote"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf2d8061" class="outline-3"&gt;
&lt;h3 id="orgf2d8061"&gt;保存和同步数据&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf2d8061"&gt;
&lt;p&gt;
如果已经配置好了远程库，那么上传和下载数据操作就类似于 git
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   dvc pull

   dvc push
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>git</category><category>linux</category><guid>https://chimez.github.io/posts/dvc-data-version-control/</guid><pubDate>Fri, 19 Mar 2021 05:53:14 GMT</pubDate></item><item><title>SageMath</title><link>https://chimez.github.io/posts/sagemath/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orgf70c8d1" class="outline-2"&gt;
&lt;h2 id="orgf70c8d1"&gt;量子力学算符代数计算&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf70c8d1"&gt;
&lt;p&gt;
参见 &lt;a href="https://sheaves.github.io/Noncommutative-Sage/"&gt;Noncommutative Algebras in Sage&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
例如要做满足 \([a, a^{\dagger}]=1, [b,b^{\dagger}]=1, [a,b]=0\) 的两个算符 \(a,b\) 的代数计算
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a_d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b_d&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeAlgebra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QQ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="n"&gt;U_relations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;b_d&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b_d&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;a_d&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a_d&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g_algebra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U_relations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_latex_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;"a^\dagger"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;"b^\dagger"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inject_variables&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
注意：
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;定义规则时，必须是后定义的字母乘在前面，例如定义时 &lt;code&gt;F.&amp;lt;a,b,c&amp;gt;&lt;/code&gt; 规则中应该写作 &lt;code&gt;c*b: ..., b*a: ...&lt;/code&gt; 等&lt;/li&gt;
&lt;li&gt;变量的 latex 显示名顺序要和变量定义顺序相同&lt;/li&gt;
&lt;li&gt;没有指定规则的乘法默认就是可对易的&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga17653b" class="outline-2"&gt;
&lt;h2 id="orga17653b"&gt;安装为 jupyter 内核&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga17653b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;jupyter kernelspec install ./SageMath/local/share/jupyter/kernels/sagemath
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd2a1a37" class="outline-2"&gt;
&lt;h2 id="orgd2a1a37"&gt;基本特性&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd2a1a37"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;直接输入数学运算公式可以作为计算器来用&lt;/li&gt;
&lt;li&gt;继承自python的面向对象系统，即任何东西都是对象&lt;/li&gt;
&lt;li&gt;在命令行模式下使用TAB补全，在notebook里似乎有bug&lt;/li&gt;
&lt;li&gt;内置交互式帮助系统，在命令后加一个问号即可显示帮助   &lt;code&gt;c.diameter?&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org363f447" class="outline-2"&gt;
&lt;h2 id="org363f447"&gt;符号运算&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org363f447"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1705cd3" class="outline-3"&gt;
&lt;h3 id="org1705cd3"&gt;基础操作&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1705cd3"&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;x = var('x')&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;定义符号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f = 1 - sin(x)^2&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;定义一个函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;print(f)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;普通打印函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;print(maxima(f))&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;美化打印函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f.simplify_trig()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;化简表达式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f(x=pi/2)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算函数值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;ingtegrate(f, x)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;不定积分&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f.differentiate(2).substitude({x: 3/pi})&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算二阶微分，并代替值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;a = var('a')&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;x是默认隐含符号，需要更多符号就要定义&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;S = solve(x^2 + x == a, x)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;解代数方程&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;S[0].rhs()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;显示代数方程解&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;show(plot(sin(x)+ sin(1.6*x)), 0, 40)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;解析画图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;F = factor(x^99 + y^99)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;分解因式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;F.expand()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;乘开因式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3e8f490" class="outline-3"&gt;
&lt;h3 id="org3e8f490"&gt;代数&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3e8f490"&gt;
&lt;p&gt;
用对象表示代数结构，群环域
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0a2fb7a" class="outline-3"&gt;
&lt;h3 id="org0a2fb7a"&gt;组合数学&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4b171d1" class="outline-2"&gt;
&lt;h2 id="org4b171d1"&gt;数值运算&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4b171d1"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga233a20" class="outline-3"&gt;
&lt;h3 id="orga233a20"&gt;基础操作&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga233a20"&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;3 + 5&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;加法&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;57.1 ^ 100&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;乘方&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;matrix([[1,2], [3,4]])&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;创建矩阵，按行写&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;g = sin(x) + (1- x^2)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;定义一个函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;find_root(g, 0, 2)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;在区间[0, 2]寻根&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;var('x y z')&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;定义一些符号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f = (1+ (y+ x^2)^2 + (1+ z+ y^2)^2)^2&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;新定义一个函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;minimize(f, [1, 2, 3], disp=1, algorithm='powell')&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算最优化，指定算法和初值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;m = random_matrix(RDF, 500)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;创建复数500×500随机矩阵&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;e = m.eigenvalues()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算矩阵的本征值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;w = [(i, abs(e[i])) for i in range(len(e))]&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;循环方式创建list&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;show(points(w))&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;成对点画图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;factorial(100)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算阶乘&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;N(pi, digits=100)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;保留100位小数，四舍五入&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;z = Partitions(10^8).cardinality()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算数的划分并给出基数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
包括以下几种浮点数类型：
&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;Python&lt;/td&gt;
&lt;td class="org-left"&gt;float, complex, decimal&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;SageMath specific&lt;/td&gt;
&lt;td class="org-left"&gt;RDF, CDF, RQDF, CC, RR, RIF, CIF&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;included Systems&lt;/td&gt;
&lt;td class="org-left"&gt;pari, maxima&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org544f1e2" class="outline-2"&gt;
&lt;h2 id="org544f1e2"&gt;绘图&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org544f1e2"&gt;
&lt;p&gt;
可绘制的类型：
&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;interact&lt;/td&gt;
&lt;td class="org-left"&gt;动态交互图，可以显示一个滑块，滑动改变图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Regions Plot/ Contours&lt;/td&gt;
&lt;td class="org-left"&gt;显示一个不等式区间&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Density Plot&lt;/td&gt;
&lt;td class="org-left"&gt;密度图，热力图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;filled plot&lt;/td&gt;
&lt;td class="org-left"&gt;可以上色显示两条线之间的区间&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;multiedge graph&lt;/td&gt;
&lt;td class="org-left"&gt;可以显示一个有向图&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;a href="https://wiki.sagemath.org/interact"&gt;这里&lt;/a&gt; 有各种动态图的例子
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8b97e4a" class="outline-2"&gt;
&lt;h2 id="org8b97e4a"&gt;技巧和常用代码片段&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8b97e4a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgad822a3" class="outline-3"&gt;
&lt;h3 id="orgad822a3"&gt;与 tex 联合使用&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgad822a3"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2aae7ea" class="outline-4"&gt;
&lt;h4 id="org2aae7ea"&gt;sagetex：可以在tex中显示sage命令的运算结果&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org2aae7ea"&gt;
&lt;p&gt;
首先需要安装 &lt;a href="http://doc.sagemath.org/html/en/tutorial/sagetex.html"&gt;sagetex&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
注意： 在网站下载的二进制包千万别手贱用 sage -i 自己再编译，由于包含文件不全，这样只会破坏已编译好的文件
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    kpsewhich -var-value=TEXMFHOME                  # 获得TEXMFHOME目录位置，一般是$HOME/texmf
    cp -R SAGE_ROOT/local/share/texmf/tex TEXMFHOME # 把sagetex复制到目录里
    texhash                                         # 让latex重新索引包
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
使用方法
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    \usepackage{sagetex}              % 引入包
    \usepackage[imagemagick]{sagetex} % 可选项
    \setlength{\sagetexindent}{10ex}  % 设置间隔
    $2+2=\sage{2+2}$                  % 行内计算sage表达式的数学结果
    \begin{sageblock}                 % 引用sage/python代码
      1+1
      var('a,b,c')
      eqn ~ [a+b*c==1, b-a*c==0, a+b=~5]
      s = solve(eqn, a,b,c)
    \end{sageblock} 
    \begin{sagesilent}      % 多行计算sage表达式
      e = 2
      e = 3*e + 1
    \end{sagesilent}
    $e=\sage{e}$            % 在同一文件内可以直接使用定义的变量
    \sageplot{E.plot(-3,3)} % sage画图
    \sagetexpause           % 在pause宏之间的sage表达式不被求值，便于修改
    \sagetexunpause
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc9367d0" class="outline-3"&gt;
&lt;h3 id="orgc9367d0"&gt;三角函数和指数之间转换&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc9367d0"&gt;
&lt;p&gt;
&lt;a href="https://ask.sagemath.org/question/7672/complex-exponentialtrigonometric/"&gt;参考这个回答&lt;/a&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;exponentialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="sd"&gt;"""从三角函数形式变换成e指数形式"""&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sageobj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_maxima_&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exponentialize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

   &lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;demoivre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="sd"&gt;"""从e指数形式变换成三角函数形式"""&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sageobj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_maxima_&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;demoivre&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>SageMath</category><guid>https://chimez.github.io/posts/sagemath/</guid><pubDate>Fri, 19 Feb 2021 06:27:07 GMT</pubDate></item></channel></rss>