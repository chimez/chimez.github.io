<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>chimez's blog (Posts about python)</title><link>https://chimez.github.io/</link><description></description><atom:link href="https://chimez.github.io/categories/cat_python.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:chimez@163.com"&gt;chimez&lt;/a&gt; </copyright><lastBuildDate>Wed, 06 Oct 2021 13:35:51 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Extending Python with C</title><link>https://chimez.github.io/posts/extending-python-with-c/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orgd5e9f6c" class="outline-2"&gt;
&lt;h2 id="orgd5e9f6c"&gt;用 C 扩展 Python&lt;/h2&gt;
&lt;/div&gt;&lt;/body&gt;
&lt;/html&gt;
</description><category>C</category><category>ffi</category><category>python</category><guid>https://chimez.github.io/posts/extending-python-with-c/</guid><pubDate>Mon, 03 May 2021 11:16:46 GMT</pubDate></item><item><title>Performant Python</title><link>https://chimez.github.io/posts/performant-python/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org50e811c" class="outline-2"&gt;
&lt;h2 id="org50e811c"&gt;Python 性能&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org50e811c"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3e6df8e" class="outline-3"&gt;
&lt;h3 id="org3e6df8e"&gt;计算机结构&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3e6df8e"&gt;
&lt;p&gt;
简单来说，计算机由计算单元、储存单元和二者之间的通信构成。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7d6990d" class="outline-4"&gt;
&lt;h4 id="org7d6990d"&gt;计算单元&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7d6990d"&gt;
&lt;p&gt;
计算单元一般是 CPU 和 GPU 等。
&lt;/p&gt;

&lt;p&gt;
计算单元重要的两个参数是
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;每周期指令 (instructions per cycle, IPC): 每个时钟周期执行的指令数&lt;/li&gt;
&lt;li&gt;时钟速度：每秒的时钟周期&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
如果提高时钟速度了，当然运行速度会变快。另一种方法是增加每个指令的计算量，通过向量化的方式，可以在一个指令中同时处理多个数据，即 SIMD(single instruction multiple data).
&lt;/p&gt;

&lt;p&gt;
由于物理和技术限制，时钟速度的增加基本停止了，所以增加同一时间内运算量的方法就是增加更多的 CPU， 即并行化。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd3c3180" class="outline-4"&gt;
&lt;h4 id="orgd3c3180"&gt;Amdahl'a law&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgd3c3180"&gt;
&lt;p&gt;
经验定律：并行程序的加速上限取决于不能并行化的最小单元。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbc327fe" class="outline-4"&gt;
&lt;h4 id="orgbc327fe"&gt;存储单元&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgbc327fe"&gt;
&lt;p&gt;
存储单元包括：机械硬盘、固态硬盘、RAM、L1/L2 等。主要的区别就是速度。一般来说速度越快容量越小。
&lt;/p&gt;

&lt;p&gt;
存储单元速度通常比计算单元慢，所以主要的优化手段就是异步 I/O 和预先缓存，保证计算设备进行计算的时候数据已经准备好了。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge0c499d" class="outline-4"&gt;
&lt;h4 id="orge0c499d"&gt;总线&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge0c499d"&gt;
&lt;p&gt;
计算单元和存储单元通过总线连接。
总线最重要的参数是总线宽度和总线频率。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbca8b8e" class="outline-2"&gt;
&lt;h2 id="orgbca8b8e"&gt;从源码安装 python&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbca8b8e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;openssl 通过 &lt;code&gt;--with-openssl&lt;/code&gt; 指定&lt;/li&gt;
&lt;li&gt;sqlite 通过修改 &lt;code&gt;setup.py&lt;/code&gt; 中的 &lt;code&gt;sqlite_inc_paths&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
libffi 通过 &lt;code&gt;CPPFLAGS&lt;/code&gt;, &lt;code&gt;LDFLAGS&lt;/code&gt; 指定
&lt;/p&gt;

&lt;p&gt;
参考编译选项
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  ./configure --prefix=$HOME/app/python --enable-optimizations --with-openssl=$HOME/app/openssl --enable-shared PKG_CONFIG_LIBDIR=$PKG_CONFIG_PATH LIBFFI_INCLUDEDIR=/vol7/home/zhongpg/app/libffi/include --with-system-ffi=/vol7/home/zhongpg/app/libffi/lib64 CPPFLAGS="-I /vol7/home/zhongpg/app/libffi/include" LDFLAGS="-L/vol7/home/zhongpg/app/libffi/lib64"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9e36ceb" class="outline-2"&gt;
&lt;h2 id="org9e36ceb"&gt;从源码安装 numpy, scipy&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9e36ceb"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;numpy 依赖
&lt;ul class="org-ul"&gt;
&lt;li&gt;cython: &lt;code&gt;pip install cython&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;scipy 依赖
&lt;ul class="org-ul"&gt;
&lt;li&gt;pybind11: &lt;code&gt;pip install "pybind11[global]"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pythran: &lt;code&gt;pip install pythran&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;执行 &lt;code&gt;git submodule update --init&lt;/code&gt; 来自动下载一些包&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
设置 &lt;code&gt;site.cfg&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
执行安装
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  python3 setup.py build -j 10 install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;
&lt;/html&gt;


&lt;div id="outline-container-orgbca8b8e" class="outline-2"&gt;
&lt;h2 id="orgbca8b8e"&gt;从源码安装 python&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbca8b8e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;openssl 通过 &lt;code&gt;--with-openssl&lt;/code&gt; 指定&lt;/li&gt;
&lt;li&gt;sqlite 通过修改 &lt;code&gt;setup.py&lt;/code&gt; 中的 &lt;code&gt;sqlite_inc_paths&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
libffi 通过 &lt;code&gt;CPPFLAGS&lt;/code&gt;, &lt;code&gt;LDFLAGS&lt;/code&gt; 指定
&lt;/p&gt;

&lt;p&gt;
参考编译选项
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  ./configure --prefix=$HOME/app/python --enable-optimizations --with-openssl=$HOME/app/openssl --enable-shared PKG_CONFIG_LIBDIR=$PKG_CONFIG_PATH LIBFFI_INCLUDEDIR=/vol7/home/zhongpg/app/libffi/include --with-system-ffi=/vol7/home/zhongpg/app/libffi/lib64 CPPFLAGS="-I /vol7/home/zhongpg/app/libffi/include" LDFLAGS="-L/vol7/home/zhongpg/app/libffi/lib64"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9e36ceb" class="outline-2"&gt;
&lt;h2 id="org9e36ceb"&gt;从源码安装 numpy, scipy&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9e36ceb"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;numpy 依赖
&lt;ul class="org-ul"&gt;
&lt;li&gt;cython: &lt;code&gt;pip install cython&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;scipy 依赖
&lt;ul class="org-ul"&gt;
&lt;li&gt;pybind11: &lt;code&gt;pip install "pybind11[global]"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pythran: &lt;code&gt;pip install pythran&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;执行 &lt;code&gt;git submodule update --init&lt;/code&gt; 来自动下载一些包&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
设置 &lt;code&gt;site.cfg&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
执行安装
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  python3 setup.py build -j 10 install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;
&lt;/html&gt;


&lt;div id="outline-container-org9e36ceb" class="outline-2"&gt;
&lt;h2 id="org9e36ceb"&gt;从源码安装 numpy, scipy&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9e36ceb"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;numpy 依赖
&lt;ul class="org-ul"&gt;
&lt;li&gt;cython: &lt;code&gt;pip install cython&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;scipy 依赖
&lt;ul class="org-ul"&gt;
&lt;li&gt;pybind11: &lt;code&gt;pip install "pybind11[global]"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pythran: &lt;code&gt;pip install pythran&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;执行 &lt;code&gt;git submodule update --init&lt;/code&gt; 来自动下载一些包&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
设置 &lt;code&gt;site.cfg&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
执行安装
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  python3 setup.py build -j 10 install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;
&lt;/html&gt;
</description><category>python</category><guid>https://chimez.github.io/posts/performant-python/</guid><pubDate>Fri, 23 Apr 2021 14:03:52 GMT</pubDate></item><item><title>pandas</title><link>https://chimez.github.io/posts/pandas/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orged89abf" class="outline-2"&gt;
&lt;h2 id="orged89abf"&gt;数据表格和矩阵之间的转换&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orged89abf"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgde798ed" class="outline-3"&gt;
&lt;h3 id="orgde798ed"&gt;从点的坐标表格 &lt;code&gt;(x,y,z)&lt;/code&gt; 得到矩阵&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgde798ed"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="s2"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
   &lt;span class="n"&gt;data_2x2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_2x2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_numpy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org4266505" class="outline-3"&gt;
&lt;h3 id="org4266505"&gt;从矩阵表格得到坐标表格&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4266505"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="s2"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
   &lt;span class="n"&gt;data_2x2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_2x2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unstack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'z'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org43c024c" class="outline-2"&gt;
&lt;h2 id="org43c024c"&gt;groupby: 分开-计算-合并&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org43c024c"&gt;
&lt;p&gt;
&lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html"&gt;groupby guide&lt;/a&gt;
通过 &lt;code&gt;groupby&lt;/code&gt; 可以做涉及到如下三个过程的一些操作：
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;根据某些标准将数据 &lt;b&gt;分类&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;对每类数据分别 &lt;b&gt;应用&lt;/b&gt; 某个函数&lt;/li&gt;
&lt;li&gt;将应用的结果 &lt;b&gt;合并&lt;/b&gt; 回数据表中&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
分开数据后通常要应用三种函数
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;b&gt;累积&lt;/b&gt; ：计算每组的和、平均值、总数等&lt;/li&gt;
&lt;li&gt;&lt;b&gt;变换&lt;/b&gt; ：进行与组内数据相关的计算并返回类似索引的列表，如对组内数据标准化、根据组的数据填上新的数据等&lt;/li&gt;
&lt;li&gt;&lt;b&gt;筛选&lt;/b&gt; ：去掉某些不符合条件的组等&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga905705" class="outline-3"&gt;
&lt;h3 id="orga905705"&gt;变换(transform)&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga905705"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;transformed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;
&lt;/html&gt;


&lt;div id="outline-container-org43c024c" class="outline-2"&gt;
&lt;h2 id="org43c024c"&gt;groupby: 分开-计算-合并&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org43c024c"&gt;
&lt;p&gt;
&lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html"&gt;groupby guide&lt;/a&gt;
通过 &lt;code&gt;groupby&lt;/code&gt; 可以做涉及到如下三个过程的一些操作：
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;根据某些标准将数据 &lt;b&gt;分类&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;对每类数据分别 &lt;b&gt;应用&lt;/b&gt; 某个函数&lt;/li&gt;
&lt;li&gt;将应用的结果 &lt;b&gt;合并&lt;/b&gt; 回数据表中&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
分开数据后通常要应用三种函数
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;b&gt;累积&lt;/b&gt; ：计算每组的和、平均值、总数等&lt;/li&gt;
&lt;li&gt;&lt;b&gt;变换&lt;/b&gt; ：进行与组内数据相关的计算并返回类似索引的列表，如对组内数据标准化、根据组的数据填上新的数据等&lt;/li&gt;
&lt;li&gt;&lt;b&gt;筛选&lt;/b&gt; ：去掉某些不符合条件的组等&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga905705" class="outline-3"&gt;
&lt;h3 id="orga905705"&gt;变换(transform)&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga905705"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;transformed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;
&lt;/html&gt;
</description><category>python pandas</category><guid>https://chimez.github.io/posts/pandas/</guid><pubDate>Sat, 30 Jan 2021 05:27:04 GMT</pubDate></item></channel></rss>