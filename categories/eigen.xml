<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>chimez's blog (关于 eigen 的文章)</title><link>https://chimez.github.io/</link><description></description><atom:link href="https://chimez.github.io/categories/eigen.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2023 &lt;a href="mailto:chimez@163.com"&gt;chimez&lt;/a&gt; </copyright><lastBuildDate>Tue, 24 Oct 2023 10:00:27 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>arpack</title><link>https://chimez.github.io/posts/arpack/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orgeaabe8d" class="outline-2"&gt;
&lt;h2 id="orgeaabe8d"&gt;ARPACK&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgeaabe8d"&gt;
&lt;p&gt;
新版本在 &lt;a href="https://github.com/opencollab/arpack-ng"&gt;arpack-ng&lt;/a&gt; , 文档在 &lt;a href="https://www.caam.rice.edu/software/ARPACK/UG/node135.html"&gt;rice - ARPACK&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgad69a87" class="outline-3"&gt;
&lt;h3 id="orgad69a87"&gt;函数说明&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgad69a87"&gt;
&lt;p&gt;
头文件 &lt;code&gt;arpack.h&lt;/code&gt; 中的函数有
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;?&amp;gt;neupd_c&lt;/code&gt; 计算一般矩阵的本征值, &lt;code&gt;&amp;lt;?&amp;gt; = sdcz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;?&amp;gt;naupd_c&lt;/code&gt; 计算一般矩阵的反向通信接口, &lt;code&gt;&amp;lt;?&amp;gt; = sdcz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;?&amp;gt;seupd_c&lt;/code&gt; 计算对称矩阵的本征值, &lt;code&gt;&amp;lt;?&amp;gt; = sd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;?&amp;gt;saupd_c&lt;/code&gt; 计算对称矩阵的反向通信接口, &lt;code&gt;&amp;lt;?&amp;gt; = sd&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
arpack 中没有计算复厄米矩阵的函数，复矩阵一律用一般矩阵的计算函数
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbba75d0" class="outline-3"&gt;
&lt;h3 id="orgbba75d0"&gt;&lt;code&gt;XYaupd&lt;/code&gt; 参数说明&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbba75d0"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;ido&lt;/code&gt;   反向通信标志，第一次运行 &lt;code&gt;ido=0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bmat&lt;/code&gt;  问题类型标志，标准本征值问题 &lt;code&gt;bmat="I"&lt;/code&gt; , 扩展本征值问题 &lt;code&gt;bmat="G"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;  矩阵维数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;which&lt;/code&gt; Ritz值的位置 &lt;code&gt;which="LA", "SA", "LM", "SM", "BE"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nev&lt;/code&gt; 计算本征值的个数 &lt;code&gt;0 &amp;lt; nev &amp;lt; n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tol&lt;/code&gt; 浮点精度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resid&lt;/code&gt; 残差向量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ncv&lt;/code&gt; Lanczos 向量个数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;v&lt;/code&gt; Lanczos 向量， &lt;code&gt;ncv&lt;/code&gt; 列&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ldv&lt;/code&gt; Lanczos 向量的首列长度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam&lt;/code&gt; &lt;code&gt;int[11]&lt;/code&gt; 的数组，保存了 11 个设置参数
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;iparam[0]=ishift&lt;/code&gt; 选择隐式移动的方法， &lt;code&gt;ishift=0&lt;/code&gt; 由用户指定， &lt;code&gt;ishift=1&lt;/code&gt; 由约化三对角矩阵决定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[1]=levec&lt;/code&gt; 没用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[2]=mxiter&lt;/code&gt; 最大 Arnoldi 更新迭代次数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[3]=nb&lt;/code&gt; 块大小，只能取 &lt;code&gt;nb=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[4]=nconv&lt;/code&gt; 收敛了的 Ritz 值个数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[5]=iupd&lt;/code&gt; 没用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[6]=mode&lt;/code&gt; 指定本征值问题的类型只能取 &lt;code&gt;mode = 1,2,3,4,5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[7]=np&lt;/code&gt; &lt;code&gt;ido=3&lt;/code&gt; 时有用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[8]=numop&lt;/code&gt; OP*x 计算的次数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[9]=numob&lt;/code&gt; B*x 计算的次数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam[10]=numreo&lt;/code&gt; 重正交化的次数&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipntr&lt;/code&gt; &lt;code&gt;int[11]&lt;/code&gt; 的数组，保存指向 &lt;code&gt;workl&lt;/code&gt;, &lt;code&gt;workd&lt;/code&gt; 中起始位置的指针&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workd&lt;/code&gt; &lt;code&gt;3*N&lt;/code&gt; 长的数组，算法内部使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workl&lt;/code&gt; &lt;code&gt;lworkl&lt;/code&gt; 长的数组，算法内部使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lworkl&lt;/code&gt; &lt;code&gt;workl&lt;/code&gt; 的长度，至少 &lt;code&gt;ncv**2 + 8*ncv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;info&lt;/code&gt; 运行提示和错误信息&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9de4bb8" class="outline-3"&gt;
&lt;h3 id="org9de4bb8"&gt;&lt;code&gt;XYeupd&lt;/code&gt; 参数说明&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9de4bb8"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;rvec&lt;/code&gt; 指定是否产生本征矢 &lt;code&gt;rvec=true&lt;/code&gt; 产生本征矢， &lt;code&gt;rvec=false&lt;/code&gt; 只产生本征值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;howmny&lt;/code&gt; 指定产生本征矢的个数 &lt;code&gt;howmny="A"&lt;/code&gt; 计算 &lt;code&gt;nev&lt;/code&gt; 个， &lt;code&gt;howmny="P"&lt;/code&gt; 计算 nev Schur 本征矢， &lt;code&gt;howmny="S"&lt;/code&gt; 计算一部分本征值，由 &lt;code&gt;select&lt;/code&gt; 指定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select&lt;/code&gt; 指定计算的本征矢&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dr&lt;/code&gt; Ritz 值的实部&lt;/li&gt;
&lt;li&gt;&lt;code&gt;di&lt;/code&gt; Ritz 值的虚部&lt;/li&gt;
&lt;li&gt;&lt;code&gt;z&lt;/code&gt; Ritz 向量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ldz&lt;/code&gt; Ritz 向量的首列维数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sigmar&lt;/code&gt; shift 的实部, iparam[6]=3 or 4 时有效&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sigmai&lt;/code&gt; shift 的虚部&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workev&lt;/code&gt; 3*ncv 的内部数组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bmat&lt;/code&gt;  以下参数与 &lt;code&gt;XYaupd&lt;/code&gt; 相同&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;which&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tol&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ncv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ldv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iparam&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipntr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lworkl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;info&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org537f21a" class="outline-3"&gt;
&lt;h3 id="org537f21a"&gt;编译&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org537f21a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4a460e4" class="outline-4"&gt;
&lt;h4 id="org4a460e4"&gt;基本的编译过程&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org4a460e4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    sh bootstrap
    ./configure
    make
    make check
    make install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbbb6d90" class="outline-4"&gt;
&lt;h4 id="orgbbb6d90"&gt;ILP64: int64 支持&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgbbb6d90"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;LP64&lt;/code&gt; 在 MKL 中表示 &lt;code&gt;int&lt;/code&gt; 做指标&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ILP64&lt;/code&gt; 表示 &lt;code&gt;long long int&lt;/code&gt; 做指标&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
arpack 沿用了 MKL 的叫法。
&lt;/p&gt;

&lt;p&gt;
配置：
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;编译时定义 &lt;code&gt;INTERFACE64&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;arpackdef.h&lt;/code&gt; 头文件&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;a_int&lt;/code&gt; 类型 (architecture int)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    INTERFACE64=1 ./configure --enable-mpi --enable-icb --with-blas=openblas64
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org2c9e4c5" class="outline-4"&gt;
&lt;h4 id="org2c9e4c5"&gt;icb: 生成 c 头文件&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org2c9e4c5"&gt;
&lt;p&gt;
arpack-ng 使用 fortran 的 iso&lt;sub&gt;c&lt;/sub&gt;&lt;sub&gt;binding&lt;/sub&gt;(icb) 生成 c 头文件
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./configure --enable-icb
    cmake -D ICB=ON
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdedc6b9" class="outline-4"&gt;
&lt;h4 id="orgdedc6b9"&gt;parpack: MPI 支持&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgdedc6b9"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./configure --enable-mpi
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org34d155c" class="outline-4"&gt;
&lt;h4 id="org34d155c"&gt;使用 cmake&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org34d155c"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;BLA_VENDOR=Intel10_64ilp&lt;/code&gt; 使用 ilp64 的 MKL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMAKE_POSITION_INDEPENDENT_CODE=ON&lt;/code&gt; 使用 &lt;code&gt;-fPIC&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    CC=gcc FC=gfortran cmake -D MPI=ON -D ICB=ON  -DCMAKE_INSTALL_PREFIX=$HOME/app/arpack -DBLA_VENDOR=Intel10_64ilp -DBUILD_SHARED_LIBS=OFF -DINTERFACE64=1  -DCMAKE_POSITION_INDEPENDENT_CODE=ON ..
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>eigen</category><guid>https://chimez.github.io/posts/arpack/</guid><pubDate>Fri, 07 May 2021 10:48:36 GMT</pubDate></item></channel></rss>