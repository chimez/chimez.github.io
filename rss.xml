<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>chimez's blog</title><link>https://chimez.github.io/</link><description>Blog of chimez</description><atom:link href="https://chimez.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:chimez@163.com"&gt;chimez&lt;/a&gt; </copyright><lastBuildDate>Wed, 03 Mar 2021 08:05:01 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>PyTables</title><link>https://chimez.github.io/posts/pytables/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orgc54e73f" class="outline-2"&gt;
&lt;h2 id="orgc54e73f"&gt;PyTables: 分层数据集&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc54e73f"&gt;
&lt;p&gt;
&lt;a href="https://www.pytables.org"&gt;PyTables&lt;/a&gt; 是基于 HDF5 格式构建的数据集，比 pandas 更底层，比 h5py 更高层。适合用在存储比 csv 表格更复杂更大的数据，同时又不想自己实现一些基本的数据操作的情况中，并且经过简单的处理就能用 pandas 进行进一步数据分析。
&lt;/p&gt;
&lt;/div&gt;


&lt;div id="outline-container-org2f46282" class="outline-3"&gt;
&lt;h3 id="org2f46282"&gt;安装&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org2f46282"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   # 使用 conda
   conda install pytables
   # 或者 pip
   python3 -m pip install tables
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
测试
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tables&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tb&lt;/span&gt;

   &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org67cb12c" class="outline-3"&gt;
&lt;h3 id="org67cb12c"&gt;基本使用&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org67cb12c"&gt;
&lt;p&gt;
pytables 的基本逻辑是
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc3ba833" class="outline-4"&gt;
&lt;h4 id="orgc3ba833"&gt;创建一个 HDF5 文件&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc3ba833"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"filename.h5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"file title"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;complevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# 别忘了还要关闭它&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org005d4b5" class="outline-4"&gt;
&lt;h4 id="org005d4b5"&gt;在文件中创建任意层的数据集&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org005d4b5"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/parent/group"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"group_name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"group title"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9e9e3a8" class="outline-4"&gt;
&lt;h4 id="org9e9e3a8"&gt;在数据集中创建若干个数据表&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9e9e3a8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="c1"&gt;# 需要创建对数据的描述&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;data_description&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsDescription&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
	&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringCol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="n"&gt;idn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int64Col&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
	&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;sub_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsDescription&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
	    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringCol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	    &lt;span class="n"&gt;id2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Float64Col&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# 然后创建空的数据表       &lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"table_name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_description&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# 在里面循环添加记录&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
	&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"a"&lt;/span&gt;
	&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"idn"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
	&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sub_data"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'asd_&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# 最后刷新一下缓存，确保数据都写入到磁盘&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-orgea59456" class="outline-2"&gt;
&lt;h2 id="orgea59456"&gt;遇到的问题&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgea59456"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga789dfa" class="outline-3"&gt;
&lt;h3 id="orga789dfa"&gt;在不支持 &lt;code&gt;flock&lt;/code&gt; 的集群上运行&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga789dfa"&gt;
&lt;p&gt;
需要设置环境变量
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   export HDF5_USE_FILE_LOCKING=FALSE
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>python</category><guid>https://chimez.github.io/posts/pytables/</guid><pubDate>Mon, 01 Mar 2021 03:23:19 GMT</pubDate></item><item><title>h5py</title><link>https://chimez.github.io/posts/h5py/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orga6ad85b" class="outline-2"&gt;
&lt;h2 id="orga6ad85b"&gt;h5py: 储存数据&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga6ad85b"&gt;
&lt;p&gt;
&lt;a href="https://www.h5py.org/"&gt;h5py&lt;/a&gt; 是 HDF5 库的 python 封装，基本提供了所有对应的 C API，因此适合用在简单并底层的应用中，特别适合对 HDF5 文件有定制的应用中。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbd84bf7" class="outline-3"&gt;
&lt;h3 id="orgbd84bf7"&gt;存&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbd84bf7"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;h5py&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'data.h5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;hf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="n"&gt;hf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"mat1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mat1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;compression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"gzip"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="n"&gt;hf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"mat2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mat2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;compression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"gzip"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

       &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"index"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"mat1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mat1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;compression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"gzip"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org5d867f0" class="outline-3"&gt;
&lt;h3 id="org5d867f0"&gt;取&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5d867f0"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;h5py&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'data.h5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;hf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="n"&gt;mat1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'mat1'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
       &lt;span class="n"&gt;mat2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'mat2'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

       &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="n"&gt;g_mat1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'mat1'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>python</category><guid>https://chimez.github.io/posts/h5py/</guid><pubDate>Sun, 28 Feb 2021 14:11:33 GMT</pubDate></item><item><title>OpenMP</title><link>https://chimez.github.io/posts/openmp/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org185110b" class="outline-2"&gt;
&lt;h2 id="org185110b"&gt;OpenMP 共享内存并行&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org185110b"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org84c1363" class="outline-3"&gt;
&lt;h3 id="org84c1363"&gt;常用函数总结&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org84c1363"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;parallel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parallel for&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sections&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parallel sections&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;critical&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;single&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;omp_get_num_procs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;omp_get_num_threads&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;omp_get_thread_num&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;omp_set_num_threads&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://chimez.github.io/posts/openmp/</guid><pubDate>Sat, 20 Feb 2021 07:37:55 GMT</pubDate></item><item><title>SageMath</title><link>https://chimez.github.io/posts/sagemath/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org4909e87" class="outline-2"&gt;
&lt;h2 id="org4909e87"&gt;量子力学算符代数计算&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4909e87"&gt;
&lt;p&gt;
参见 &lt;a href="https://sheaves.github.io/Noncommutative-Sage/"&gt;Noncommutative Algebras in Sage&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
例如要做满足 \([a, a^{\dagger}]=1, [b,b^{\dagger}]=1, [a,b]=0\) 的两个算符 \(a,b\) 的代数计算
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a_d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b_d&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FreeAlgebra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QQ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="n"&gt;U_relations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;b_d&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b_d&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;a_d&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a_d&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g_algebra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U_relations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_latex_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;"a^\dagger"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;"b^\dagger"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inject_variables&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
注意：
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;定义规则时，必须是后定义的字母乘在前面，例如定义时 &lt;code&gt;F.&amp;lt;a,b,c&amp;gt;&lt;/code&gt; 规则中应该写作 &lt;code&gt;c*b: ..., b*a: ...&lt;/code&gt; 等&lt;/li&gt;
&lt;li&gt;变量的 latex 显示名顺序要和变量定义顺序相同&lt;/li&gt;
&lt;li&gt;没有指定规则的乘法默认就是可对易的&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;




&lt;div id="outline-container-orgbc8f12f" class="outline-2"&gt;
&lt;h2 id="orgbc8f12f"&gt;安装为 jupyter 内核&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbc8f12f"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;jupyter kernelspec install ./SageMath/local/share/jupyter/kernels/sagemath
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1b76577" class="outline-2"&gt;
&lt;h2 id="org1b76577"&gt;基本特性&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1b76577"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;直接输入数学运算公式可以作为计算器来用&lt;/li&gt;
&lt;li&gt;继承自python的面向对象系统，即任何东西都是对象&lt;/li&gt;
&lt;li&gt;在命令行模式下使用TAB补全，在notebook里似乎有bug&lt;/li&gt;
&lt;li&gt;内置交互式帮助系统，在命令后加一个问号即可显示帮助   &lt;code&gt;c.diameter?&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc71646d" class="outline-2"&gt;
&lt;h2 id="orgc71646d"&gt;符号运算&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc71646d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9fabdb6" class="outline-3"&gt;
&lt;h3 id="org9fabdb6"&gt;基础操作&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9fabdb6"&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;x = var('x')&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;定义符号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f = 1 - sin(x)^2&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;定义一个函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;print(f)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;普通打印函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;print(maxima(f))&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;美化打印函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f.simplify_trig()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;化简表达式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f(x=pi/2)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算函数值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;ingtegrate(f, x)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;不定积分&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f.differentiate(2).substitude({x: 3/pi})&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算二阶微分，并代替值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;a = var('a')&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;x是默认隐含符号，需要更多符号就要定义&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;S = solve(x^2 + x == a, x)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;解代数方程&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;S[0].rhs()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;显示代数方程解&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;show(plot(sin(x)+ sin(1.6*x)), 0, 40)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;解析画图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;F = factor(x^99 + y^99)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;分解因式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;F.expand()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;乘开因式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org75c8276" class="outline-3"&gt;
&lt;h3 id="org75c8276"&gt;代数&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org75c8276"&gt;
&lt;p&gt;
用对象表示代数结构，群环域
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0e444fa" class="outline-3"&gt;
&lt;h3 id="org0e444fa"&gt;组合数学&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org34e7cd4" class="outline-2"&gt;
&lt;h2 id="org34e7cd4"&gt;数值运算&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org34e7cd4"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org322c8dc" class="outline-3"&gt;
&lt;h3 id="org322c8dc"&gt;基础操作&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org322c8dc"&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;3 + 5&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;加法&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;57.1 ^ 100&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;乘方&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;matrix([[1,2], [3,4]])&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;创建矩阵，按行写&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;g = sin(x) + (1- x^2)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;定义一个函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;find_root(g, 0, 2)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;在区间[0, 2]寻根&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;var('x y z')&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;定义一些符号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;f = (1+ (y+ x^2)^2 + (1+ z+ y^2)^2)^2&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;新定义一个函数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;minimize(f, [1, 2, 3], disp=1, algorithm='powell')&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算最优化，指定算法和初值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;m = random_matrix(RDF, 500)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;创建复数500×500随机矩阵&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;e = m.eigenvalues()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算矩阵的本征值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;w = [(i, abs(e[i])) for i in range(len(e))]&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;循环方式创建list&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;show(points(w))&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;成对点画图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;factorial(100)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算阶乘&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;N(pi, digits=100)&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;保留100位小数，四舍五入&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;z = Partitions(10^8).cardinality()&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;计算数的划分并给出基数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
包括以下几种浮点数类型：
&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;Python&lt;/td&gt;
&lt;td class="org-left"&gt;float, complex, decimal&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;SageMath specific&lt;/td&gt;
&lt;td class="org-left"&gt;RDF, CDF, RQDF, CC, RR, RIF, CIF&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;included Systems&lt;/td&gt;
&lt;td class="org-left"&gt;pari, maxima&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6463c3f" class="outline-2"&gt;
&lt;h2 id="org6463c3f"&gt;绘图&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6463c3f"&gt;
&lt;p&gt;
可绘制的类型：
&lt;/p&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;interact&lt;/td&gt;
&lt;td class="org-left"&gt;动态交互图，可以显示一个滑块，滑动改变图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Regions Plot/ Contours&lt;/td&gt;
&lt;td class="org-left"&gt;显示一个不等式区间&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Density Plot&lt;/td&gt;
&lt;td class="org-left"&gt;密度图，热力图&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;filled plot&lt;/td&gt;
&lt;td class="org-left"&gt;可以上色显示两条线之间的区间&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;multiedge graph&lt;/td&gt;
&lt;td class="org-left"&gt;可以显示一个有向图&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;a href="https://wiki.sagemath.org/interact"&gt;这里&lt;/a&gt; 有各种动态图的例子
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org81a0f29" class="outline-2"&gt;
&lt;h2 id="org81a0f29"&gt;技巧和常用代码片段&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org81a0f29"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf167fe7" class="outline-3"&gt;
&lt;h3 id="orgf167fe7"&gt;与 tex 联合使用&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf167fe7"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org517473b" class="outline-4"&gt;
&lt;h4 id="org517473b"&gt;sagetex：可以在tex中显示sage命令的运算结果&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org517473b"&gt;
&lt;p&gt;
首先需要安装 &lt;a href="http://doc.sagemath.org/html/en/tutorial/sagetex.html"&gt;sagetex&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
注意： 在网站下载的二进制包千万别手贱用 sage -i 自己再编译，由于包含文件不全，这样只会破坏已编译好的文件
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    kpsewhich -var-value=TEXMFHOME                  # 获得TEXMFHOME目录位置，一般是$HOME/texmf
    cp -R SAGE_ROOT/local/share/texmf/tex TEXMFHOME # 把sagetex复制到目录里
    texhash                                         # 让latex重新索引包
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
使用方法
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    \usepackage{sagetex}              % 引入包
    \usepackage[imagemagick]{sagetex} % 可选项
    \setlength{\sagetexindent}{10ex}  % 设置间隔
    $2+2=\sage{2+2}$                  % 行内计算sage表达式的数学结果
    \begin{sageblock}                 % 引用sage/python代码
      1+1
      var('a,b,c')
      eqn ~ [a+b*c==1, b-a*c==0, a+b=~5]
      s = solve(eqn, a,b,c)
    \end{sageblock} 
    \begin{sagesilent}      % 多行计算sage表达式
      e = 2
      e = 3*e + 1
    \end{sagesilent}
    $e=\sage{e}$            % 在同一文件内可以直接使用定义的变量
    \sageplot{E.plot(-3,3)} % sage画图
    \sagetexpause           % 在pause宏之间的sage表达式不被求值，便于修改
    \sagetexunpause
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org37e44cb" class="outline-3"&gt;
&lt;h3 id="org37e44cb"&gt;三角函数和指数之间转换&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org37e44cb"&gt;
&lt;p&gt;
&lt;a href="https://ask.sagemath.org/question/7672/complex-exponentialtrigonometric/"&gt;参考这个回答&lt;/a&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exponentialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
       &lt;span class="sd"&gt;"""从三角函数形式变换成e指数形式"""&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sageobj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_maxima_&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exponentialize&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;demoivre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
       &lt;span class="sd"&gt;"""从e指数形式变换成三角函数形式"""&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sageobj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_maxima_&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;demoivre&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://chimez.github.io/posts/sagemath/</guid><pubDate>Fri, 19 Feb 2021 06:27:07 GMT</pubDate></item><item><title>C Memory Management</title><link>https://chimez.github.io/posts/c-memory-management/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-orgcc5bf1f" class="outline-2"&gt;
&lt;h2 id="orgcc5bf1f"&gt;C 语言内存管理&lt;/h2&gt;
&lt;/div&gt;

&lt;div id="outline-container-org05975d0" class="outline-2"&gt;
&lt;h2 id="org05975d0"&gt;关键字&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org05975d0"&gt;
&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;关键字&lt;/b&gt;&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;存储类别&lt;/b&gt;&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;存储期&lt;/b&gt;&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;作用域&lt;/b&gt;&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;链接&lt;/b&gt;&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;声明方式&lt;/b&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;可选 (&lt;code&gt;auto&lt;/code&gt;)&lt;/td&gt;
&lt;td class="org-left"&gt;自动&lt;/td&gt;
&lt;td class="org-left"&gt;自动&lt;/td&gt;
&lt;td class="org-left"&gt;块&lt;/td&gt;
&lt;td class="org-left"&gt;无&lt;/td&gt;
&lt;td class="org-left"&gt;块内&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;register&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;寄存器&lt;/td&gt;
&lt;td class="org-left"&gt;自动&lt;/td&gt;
&lt;td class="org-left"&gt;块&lt;/td&gt;
&lt;td class="org-left"&gt;无&lt;/td&gt;
&lt;td class="org-left"&gt;块内&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;无&lt;/td&gt;
&lt;td class="org-left"&gt;静态外部链接&lt;/td&gt;
&lt;td class="org-left"&gt;静态&lt;/td&gt;
&lt;td class="org-left"&gt;文件&lt;/td&gt;
&lt;td class="org-left"&gt;外部&lt;/td&gt;
&lt;td class="org-left"&gt;函数外&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;static&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;静态内部链接&lt;/td&gt;
&lt;td class="org-left"&gt;静态&lt;/td&gt;
&lt;td class="org-left"&gt;文件&lt;/td&gt;
&lt;td class="org-left"&gt;内部&lt;/td&gt;
&lt;td class="org-left"&gt;函数外&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;static&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;静态无链接&lt;/td&gt;
&lt;td class="org-left"&gt;静态&lt;/td&gt;
&lt;td class="org-left"&gt;块&lt;/td&gt;
&lt;td class="org-left"&gt;无&lt;/td&gt;
&lt;td class="org-left"&gt;块内&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;extern&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;外部&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;_Thread_local&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;const&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;不可变&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;inline&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;volatile&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;代理，可由其它程序改变&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;restrict&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;限定唯一的指针&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;_Atomic&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;ol class="org-ol"&gt;
&lt;li&gt;好的设计不应该使用文件作用域的变量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;auto&lt;/code&gt; 关键字用于明确显示使用了与外部同名的变量名，与 c++ 中的完全不同，不建议使用&lt;/li&gt;
&lt;li&gt;函数的默认类别是 &lt;code&gt;extern&lt;/code&gt; 除非使用了 &lt;code&gt;static&lt;/code&gt; 指定为模块私有&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt; 静态指的是生命周期一直在， &lt;code&gt;const&lt;/code&gt; 才是不可变&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const&lt;/code&gt; 变量只能初始化，不能修改&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const float * pf&lt;/code&gt; 指针 &lt;code&gt;pf&lt;/code&gt; 指向 &lt;code&gt;const float&lt;/code&gt; 类型的对象，即对象内容不可变，但指针可以指向其它地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float const * pf&lt;/code&gt; 同上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float * const pf&lt;/code&gt; 指针 &lt;code&gt;pf&lt;/code&gt; 指向 &lt;code&gt;float&lt;/code&gt; 类型的对象，即对象内容可变，但指针不能指向其它地址&lt;/li&gt;
&lt;li&gt;即 &lt;code&gt;const&lt;/code&gt; 在 &lt;code&gt;*&lt;/code&gt; 前面表示指向的值不能变，在 &lt;code&gt;*&lt;/code&gt; 后面表示指针本身不能变&lt;/li&gt;
&lt;li&gt;函数的形参中有 &lt;code&gt;const&lt;/code&gt; 表示传递的值不变&lt;/li&gt;
&lt;li&gt;&lt;code&gt;restrict&lt;/code&gt; 限制指针是指向内存的唯一和初始方式，用于优化&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org9a32617" class="outline-2"&gt;
&lt;h2 id="org9a32617"&gt;&lt;/h2&gt;
&lt;/div&gt;</description><category>C</category><category>Memory Management</category><guid>https://chimez.github.io/posts/c-memory-management/</guid><pubDate>Fri, 12 Feb 2021 00:37:35 GMT</pubDate></item><item><title>pandas</title><link>https://chimez.github.io/posts/pandas/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org61b6faf" class="outline-2"&gt;
&lt;h2 id="org61b6faf"&gt;数据表格和矩阵之间的转换&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org61b6faf"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2812846" class="outline-3"&gt;
&lt;h3 id="org2812846"&gt;从点的坐标表格 &lt;code&gt;(x,y,z)&lt;/code&gt; 得到矩阵&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org2812846"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="s2"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
   &lt;span class="n"&gt;data_2x2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_2x2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_numpy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5884971" class="outline-3"&gt;
&lt;h3 id="org5884971"&gt;从矩阵表格得到坐标表格&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5884971"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="s2"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
   &lt;span class="n"&gt;data_2x2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pivot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

   &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_2x2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unstack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'z'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org33eca5f" class="outline-2"&gt;
&lt;h2 id="org33eca5f"&gt;groupby: 分开-计算-合并&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org33eca5f"&gt;
&lt;p&gt;
&lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html"&gt;groupby guide&lt;/a&gt;
通过 &lt;code&gt;groupby&lt;/code&gt; 可以做涉及到如下三个过程的一些操作：
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;根据某些标准将数据 &lt;b&gt;分类&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;对每类数据分别 &lt;b&gt;应用&lt;/b&gt; 某个函数&lt;/li&gt;
&lt;li&gt;将应用的结果 &lt;b&gt;合并&lt;/b&gt; 回数据表中&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
分开数据后通常要应用三种函数
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;b&gt;累积&lt;/b&gt; ：计算每组的和、平均值、总数等&lt;/li&gt;
&lt;li&gt;&lt;b&gt;变换&lt;/b&gt; ：进行与组内数据相关的计算并返回类似索引的列表，如对组内数据标准化、根据组的数据填上新的数据等&lt;/li&gt;
&lt;li&gt;&lt;b&gt;筛选&lt;/b&gt; ：去掉某些不符合条件的组等&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5c11d2f" class="outline-3"&gt;
&lt;h3 id="org5c11d2f"&gt;变换(transform)&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5c11d2f"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="n"&gt;transformed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>python pandas</category><guid>https://chimez.github.io/posts/pandas/</guid><pubDate>Sat, 30 Jan 2021 05:27:04 GMT</pubDate></item><item><title>vimrc: vim</title><link>https://chimez.github.io/posts/vim/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org01bbf54" class="outline-2"&gt;
&lt;h2 id="org01bbf54"&gt;正则表达式中使用非贪心匹配&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org01bbf54"&gt;
&lt;p&gt;
&lt;code&gt;.*&lt;/code&gt; 变成 &lt;code&gt;.\{-}&lt;/code&gt;
&lt;code&gt;.+&lt;/code&gt; 变成 &lt;code&gt;.\{-1,\}&lt;/code&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux vim</category><guid>https://chimez.github.io/posts/vim/</guid><pubDate>Thu, 28 Jan 2021 10:33:00 GMT</pubDate></item><item><title>ffmpeg</title><link>https://chimez.github.io/posts/ffmpeg/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org1143fa6" class="outline-2"&gt;
&lt;h2 id="org1143fa6"&gt;合并视频&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1143fa6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  ffmpeg -f concat -i filelist.txt -c copy out.mkv
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;filelist.txt&lt;/code&gt; 内容如下， 需要加 &lt;code&gt;file&lt;/code&gt; ，还要用单引号括起来，或者加选项 &lt;code&gt;-safe 0&lt;/code&gt;
&lt;/p&gt;

&lt;pre class="example" id="org160845a"&gt;
file '/home/a1.mkv'
file '/home/a2.mkv'
...
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org97c4a70" class="outline-2"&gt;
&lt;h2 id="org97c4a70"&gt;转换格式&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org97c4a70"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  ffmpeg -i in.mpeg -q:a 0 -q:v 0 out.mkv
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;选项&lt;/b&gt;&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;说明&lt;/b&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;-q:a 0&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;最高等级转换音频&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;-q:v 0&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;最高等级转换视频&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org46b97ff" class="outline-2"&gt;
&lt;h2 id="org46b97ff"&gt;分割视频&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org46b97ff"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  ffmpeg -i in.mp4 -ss 00:10:00 -t 00:30:40 -acodec copy -vcodec copy output.mp4
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
命令的结果是分割得到00:10:00 –&amp;gt; 00:40:40 的原格式视频片段
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;选项&lt;/b&gt;&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;&lt;b&gt;说明&lt;/b&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;-ss 00:10:00&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;从00:10:00开始分割&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;-t  00:30:40&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;分割时长00:30:40&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;-acodec copy&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;音频与原格式相同&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;code&gt;-vcodec copy&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;视频与原格式相同&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux ffmpeg</category><guid>https://chimez.github.io/posts/ffmpeg/</guid><pubDate>Thu, 28 Jan 2021 07:57:49 GMT</pubDate></item><item><title>emacs</title><link>https://chimez.github.io/posts/emacs/</link><dc:creator>chimez</dc:creator><description>&lt;div id="outline-container-org4753fae" class="outline-2"&gt;
&lt;h2 id="org4753fae"&gt;从源码编译安装&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4753fae"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org59d6baf" class="outline-3"&gt;
&lt;h3 id="org59d6baf"&gt;查看特性&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org59d6baf"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;查看 &lt;code&gt;system-configuration-features&lt;/code&gt; 中的信息&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0422539" class="outline-3"&gt;
&lt;h3 id="org0422539"&gt;查看编译选项&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0422539"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;查看 &lt;code&gt;system-configuration-options&lt;/code&gt; 中的信息&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   ./configure --without-compress-install --with-modules 'CFLAGS=-O2 -g3'
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-orgbeca7b6" class="outline-2"&gt;
&lt;h2 id="orgbeca7b6"&gt;在正则表达式中使用lisp代码&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbeca7b6"&gt;
&lt;p&gt;
使用 &lt;code&gt;\,&lt;/code&gt; 后加一个表达式
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="nv"&gt;:s/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;*?&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;*?&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;b/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;string-to-number&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-orgafb8393" class="outline-2"&gt;
&lt;h2 id="orgafb8393"&gt;正则表达式的非贪心匹配&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgafb8393"&gt;
&lt;p&gt;
non greedy regex
星号后加问号
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:s/.*?//
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org96d85b6" class="outline-2"&gt;
&lt;h2 id="org96d85b6"&gt;文件编码问题&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org96d85b6"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org961d9a2" class="outline-3"&gt;
&lt;h3 id="org961d9a2"&gt;改变显示文件编码,解决乱码问题&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org961d9a2"&gt;
&lt;p&gt;
使用命令
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="nv"&gt;revert-buffer-with-file-coding-system&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6bb0349" class="outline-3"&gt;
&lt;h3 id="org6bb0349"&gt;修改编码&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org6bb0349"&gt;
&lt;p&gt;
在按下 &lt;code&gt;M-x&lt;/code&gt; 后使用命令改变编码再保存即可
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="nv"&gt;set-buffer-file-coding-system&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgce426ae" class="outline-3"&gt;
&lt;h3 id="orgce426ae"&gt;常见的编码&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgce426ae"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;中文
&lt;ol class="org-ol"&gt;
&lt;li&gt;cp936&lt;/li&gt;
&lt;li&gt;gb2312&lt;/li&gt;
&lt;li&gt;gb18030&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;日文
&lt;ol class="org-ol"&gt;
&lt;li&gt;cp932&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org1c440cc" class="outline-2"&gt;
&lt;h2 id="org1c440cc"&gt;对齐排版代码&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1c440cc"&gt;
&lt;p&gt;
使用 &lt;code&gt;align-regexp, sort-regexp-fields, sort-columns&lt;/code&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-org3fbb9ee" class="outline-2"&gt;
&lt;h2 id="org3fbb9ee"&gt;Tramp 远程编辑&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3fbb9ee"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfd8d9b9" class="outline-3"&gt;
&lt;h3 id="orgfd8d9b9"&gt;配置 ssh&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfd8d9b9"&gt;
&lt;p&gt;
注意 tramp 的远程登陆只支持 bash, 不支持 zsh, 所以要进行设置，tramp 登陆用 &lt;code&gt;namebash&lt;/code&gt;, ssh 登陆用 &lt;code&gt;namezsh&lt;/code&gt; 就行了
&lt;/p&gt;

&lt;p&gt;
文件 &lt;code&gt;$HOME/.ssh/config&lt;/code&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   Host namebash
       HostName 10.0.0.1
       User username
       RequestTTY yes
       RemoteCommand bash

   Host namezsh
       HostName 10.0.0.1
       User username
       RequestTTY yes
       RemoteCommand zsh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux emacs</category><guid>https://chimez.github.io/posts/emacs/</guid><pubDate>Tue, 26 Jan 2021 10:28:36 GMT</pubDate></item><item><title>vimrc: vim配置文件</title><link>https://chimez.github.io/posts/vimrc/</link><dc:creator>chimez</dc:creator><description>&lt;p&gt;
&amp;lt;src
&lt;/p&gt;



&lt;p&gt;
Write your post here.
&lt;/p&gt;</description><category>linux vim</category><guid>https://chimez.github.io/posts/vimrc/</guid><pubDate>Sun, 24 Jan 2021 05:57:00 GMT</pubDate></item></channel></rss>